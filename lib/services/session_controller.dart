import 'package:handlerify/models/statistics.dart';
import 'package:handlerify/services/session_service.dart';
import 'package:injectable/injectable.dart';
import 'package:intl/intl.dart';

import '../models/session.dart';
import '../models/sessions_with_statistics.dart';

@dev
@test
@injectable
class SessionController {

  final SessionService sessionService;
  Session session = Session.empty();

  SessionController(SessionService this.sessionService);

  String _autogenerateTitle(DateTime startTime, int sessionNumber) {
    final DateFormat formatter = DateFormat('MMMd');
    return formatter.format(startTime) + " Session " + sessionNumber.toString();
  }

  Future<SessionsWithStatistics> getTodaysSessionsAndStats() async {
    List<Session> sessions = await sessionService.getTodaysSessions();

    Duration elapsedSum = sessions.map((session) => session.elapsedTime).fold(Duration(), (prev, amount) => prev + amount!);
    print(elapsedSum.toString());
    Statistics statistics = Statistics(sessions.length, elapsedSum);

    SessionsWithStatistics sessionsAndStats = SessionsWithStatistics(sessions, statistics);
    return Future.value(sessionsAndStats);
  }

  // returns the autogenerated title for display
  Future<String> start() async {
    int count = await sessionService.getTodayCount();
    int sessionNumber = count + 1;

    session.startTime = DateTime.now();
    session.title = _autogenerateTitle(session.startTime!, sessionNumber);

    return session.title!;
  }

  // TODO
  void save(int durationSeconds, String filePath) {
    session.elapsedTime = Duration(seconds: durationSeconds);
    session.endTime = DateTime.now();
    session.audioFilePath = filePath;
    sessionService.create(session);
  }

  void pause() {
    session.endTime = DateTime.now();

  }

  void resume() {

  }

  void delete() {

  }

}